{
  "address": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "addressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "funders",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "minUsd",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "priceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_minUsd",
          "type": "uint256"
        }
      ],
      "name": "setMinUsd",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x500812edc10b7d377f210cebf8e9b21e14f9efd7387ed62d25c742664dd744ce",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
    "transactionIndex": 0,
    "gasUsed": "805215",
    "logsBloom": "0x
    "blockHash": "0xdbcbc22427baed0895cbef78261c344698b5504937dd7d670e31f33efc7893d7",
    "transactionHash": "0x500812edc10b7d377f210cebf8e9b21e14f9efd7387ed62d25c742664dd744ce",
    "logs": [],
    "blockNumber": 2,
    "cumulativeGasUsed": "805215",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x5FbDB2315678afecb367f032d93F642f64180aa3"
  ],
  "numDeployments": 1,
  "solcInputHash": "7dc0b2a4923e7c0b1eefdd41b83e4a80",
  "metadata": "{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"addressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"funders\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minUsd\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"priceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_minUsd\",\"type\":\"uint256\"}],\"name\":\"setMinUsd\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/fundMe.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  // getRoundData and latestRoundData should both raise \\\"No data present\\\"\\n  // if they do not have data to report, instead of returning unset values\\n  // which could be misinterpreted as actual reported values.\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0xf2b6c9adb3552254df1445b73563cf014434ff5e78663e9b961b6c059506ceb5\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.8;\\r\\n\\r\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\r\\n\\r\\n// This is just a library without any state variable's and just has some useful functions, that we can use in our main contract\\r\\n\\r\\nlibrary PriceConverter {\\r\\n    function getEthPrice(\\r\\n        AggregatorV3Interface priceFeed\\r\\n    ) internal view returns (uint256) {\\r\\n        // Instatiating a smart contract\\r\\n        (, int price, , , ) = priceFeed.latestRoundData();\\r\\n        uint8 decimals = priceFeed.decimals();\\r\\n        return uint(price) * (10 ** (18 - decimals));\\r\\n    }\\r\\n\\r\\n    function requiredEth(\\r\\n        uint _minUsd,\\r\\n        AggregatorV3Interface priceFeed\\r\\n    ) internal view returns (uint) {\\r\\n        return (_minUsd * 1e18) / getEthPrice(priceFeed);\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x284a666c283ed1feea1364b6675a02552ecb3f5e5feee46527737d0a33e9dd3d\",\"license\":\"MIT\"},\"contracts/fundMe.sol\":{\"content\":\"// Get funds from users\\r\\n// Withdraw funds\\r\\n// Set a minimum funding value in USD\\r\\n\\r\\n// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.8;\\r\\n\\r\\nimport \\\"./PriceConverter.sol\\\";\\r\\n\\r\\ncontract FundMe {\\r\\n    using PriceConverter for uint256;\\r\\n\\r\\n    uint public minUsd = 50 * 1e18;\\r\\n    address payable private owner;\\r\\n\\r\\n    address[] public funders;\\r\\n    mapping(address => uint256) public addressToAmountFunded;\\r\\n\\r\\n    AggregatorV3Interface public priceFeed;\\r\\n\\r\\n    constructor(address priceFeedAddress) {\\r\\n        owner = payable(msg.sender);\\r\\n        priceFeed = AggregatorV3Interface(priceFeedAddress);\\r\\n    }\\r\\n\\r\\n    modifier onlyOwner() {\\r\\n        require(msg.sender == owner);\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    // Here we want minimum 50 usd but the users will send the value in ether\\r\\n    // Now we have to know how much ether === 50 usd, and ether's price keeps changing every second in the market\\r\\n    // Here we use chainlink's price feed to get real time value of ether in terms of usd (ether/usd)\\r\\n\\r\\n    function fund() public payable {\\r\\n        // Want to be able to set a minimum fund amount in USD\\r\\n        // msg.value is in wei we have to convert eth usd value to wei as well\\r\\n        require(\\r\\n            msg.value >= minUsd.requiredEth(priceFeed),\\r\\n            \\\"Didn't send enough\\\"\\r\\n        );\\r\\n        funders.push(msg.sender);\\r\\n        addressToAmountFunded[msg.sender] = msg.value;\\r\\n    }\\r\\n\\r\\n    function setMinUsd(uint _minUsd) external onlyOwner {\\r\\n        minUsd = _minUsd * 1e18;\\r\\n    }\\r\\n\\r\\n    function withdraw() public onlyOwner {\\r\\n        owner.transfer(address(this).balance);\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0xc593e738c81b3bb8f618499d85fd55c5130e8a4d4a4abb8930caa480bb5a2c40\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60806040526802b5e3af16b188000060005534801561001d57600080fd5b50604051610dba380380610dba833981810160405281019061003f919061012a565b33600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050610157565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100f7826100cc565b9050919050565b610107816100ec565b811461011257600080fd5b50565b600081519050610124816100fe565b92915050565b6000602082840312156101405761013f6100c7565b5b600061014e84828501610115565b91505092915050565b610c54806101666000396000f3fe6080604052600436106100705760003560e01c806351b80e411161004e57806351b80e41146100f2578063741bef1a1461011d578063b60d428814610148578063dc0d3dff1461015257610070565b80633ccfd60b146100755780633e47d6f31461008c578063457aa181146100c9575b600080fd5b34801561008157600080fd5b5061008a61018f565b005b34801561009857600080fd5b506100b360048036038101906100ae919061063a565b610254565b6040516100c09190610680565b60405180910390f35b3480156100d557600080fd5b506100f060048036038101906100eb91906106c7565b61026c565b005b3480156100fe57600080fd5b506101076102e3565b6040516101149190610680565b60405180910390f35b34801561012957600080fd5b506101326102e9565b60405161013f9190610753565b60405180910390f35b61015061030f565b005b34801561015e57600080fd5b50610179600480360381019061017491906106c7565b610431565b604051610186919061077d565b60405180910390f35b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146101e957600080fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f19350505050158015610251573d6000803e3d6000fd5b50565b60036020528060005260406000206000915090505481565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146102c657600080fd5b670de0b6b3a7640000816102da91906107c7565b60008190555050565b60005481565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610346600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660005461047090919063ffffffff16565b341015610388576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161037f9061087e565b60405180910390fd5b6002339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550565b6002818154811061044157600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600061047b826104a1565b670de0b6b3a76400008461048f91906107c7565b61049991906108cd565b905092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b1580156104ea57600080fd5b505afa1580156104fe573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610522919061098b565b50505091505060008373ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b15801561057057600080fd5b505afa158015610584573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105a89190610a3f565b90508060126105b79190610a6c565b600a6105c39190610bd3565b826105ce91906107c7565b92505050919050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610607826105dc565b9050919050565b610617816105fc565b811461062257600080fd5b50565b6000813590506106348161060e565b92915050565b6000602082840312156106505761064f6105d7565b5b600061065e84828501610625565b91505092915050565b6000819050919050565b61067a81610667565b82525050565b60006020820190506106956000830184610671565b92915050565b6106a481610667565b81146106af57600080fd5b50565b6000813590506106c18161069b565b92915050565b6000602082840312156106dd576106dc6105d7565b5b60006106eb848285016106b2565b91505092915050565b6000819050919050565b600061071961071461070f846105dc565b6106f4565b6105dc565b9050919050565b600061072b826106fe565b9050919050565b600061073d82610720565b9050919050565b61074d81610732565b82525050565b60006020820190506107686000830184610744565b92915050565b610777816105fc565b82525050565b6000602082019050610792600083018461076e565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006107d282610667565b91506107dd83610667565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048311821515161561081657610815610798565b5b828202905092915050565b600082825260208201905092915050565b7f4469646e27742073656e6420656e6f7567680000000000000000000000000000600082015250565b6000610868601283610821565b915061087382610832565b602082019050919050565b600060208201905081810360008301526108978161085b565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60006108d882610667565b91506108e383610667565b9250826108f3576108f261089e565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b61091d816108fe565b811461092857600080fd5b50565b60008151905061093a81610914565b92915050565b6000819050919050565b61095381610940565b811461095e57600080fd5b50565b6000815190506109708161094a565b92915050565b6000815190506109858161069b565b92915050565b600080600080600060a086880312156109a7576109a66105d7565b5b60006109b58882890161092b565b95505060206109c688828901610961565b94505060406109d788828901610976565b93505060606109e888828901610976565b92505060806109f98882890161092b565b9150509295509295909350565b600060ff82169050919050565b610a1c81610a06565b8114610a2757600080fd5b50565b600081519050610a3981610a13565b92915050565b600060208284031215610a5557610a546105d7565b5b6000610a6384828501610a2a565b91505092915050565b6000610a7782610a06565b9150610a8283610a06565b925082821015610a9557610a94610798565b5b828203905092915050565b60008160011c9050919050565b6000808291508390505b6001851115610af757808604811115610ad357610ad2610798565b5b6001851615610ae25780820291505b8081029050610af085610aa0565b9450610ab7565b94509492505050565b600082610b105760019050610bcc565b81610b1e5760009050610bcc565b8160018114610b345760028114610b3e57610b6d565b6001915050610bcc565b60ff841115610b5057610b4f610798565b5b8360020a915084821115610b6757610b66610798565b5b50610bcc565b5060208310610133831016604e8410600b8410161715610ba25782820a905083811115610b9d57610b9c610798565b5b610bcc565b610baf8484846001610aad565b92509050818404811115610bc657610bc5610798565b5b81810290505b9392505050565b6000610bde82610667565b9150610be983610a06565b9250610c167fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8484610b00565b90509291505056fea264697066735822122022b725180b09ae13f0ebedebb307d350b4d4d9ceb84fd2da014a44643c12d87264736f6c63430008080033",
  "deployedBytecode": "0x6080604052600436106100705760003560e01c806351b80e411161004e57806351b80e41146100f2578063741bef1a1461011d578063b60d428814610148578063dc0d3dff1461015257610070565b80633ccfd60b146100755780633e47d6f31461008c578063457aa181146100c9575b600080fd5b34801561008157600080fd5b5061008a61018f565b005b34801561009857600080fd5b506100b360048036038101906100ae919061063a565b610254565b6040516100c09190610680565b60405180910390f35b3480156100d557600080fd5b506100f060048036038101906100eb91906106c7565b61026c565b005b3480156100fe57600080fd5b506101076102e3565b6040516101149190610680565b60405180910390f35b34801561012957600080fd5b506101326102e9565b60405161013f9190610753565b60405180910390f35b61015061030f565b005b34801561015e57600080fd5b50610179600480360381019061017491906106c7565b610431565b604051610186919061077d565b60405180910390f35b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146101e957600080fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f19350505050158015610251573d6000803e3d6000fd5b50565b60036020528060005260406000206000915090505481565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146102c657600080fd5b670de0b6b3a7640000816102da91906107c7565b60008190555050565b60005481565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610346600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660005461047090919063ffffffff16565b341015610388576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161037f9061087e565b60405180910390fd5b6002339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550565b6002818154811061044157600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600061047b826104a1565b670de0b6b3a76400008461048f91906107c7565b61049991906108cd565b905092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b1580156104ea57600080fd5b505afa1580156104fe573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610522919061098b565b50505091505060008373ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b15801561057057600080fd5b505afa158015610584573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105a89190610a3f565b90508060126105b79190610a6c565b600a6105c39190610bd3565b826105ce91906107c7565b92505050919050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610607826105dc565b9050919050565b610617816105fc565b811461062257600080fd5b50565b6000813590506106348161060e565b92915050565b6000602082840312156106505761064f6105d7565b5b600061065e84828501610625565b91505092915050565b6000819050919050565b61067a81610667565b82525050565b60006020820190506106956000830184610671565b92915050565b6106a481610667565b81146106af57600080fd5b50565b6000813590506106c18161069b565b92915050565b6000602082840312156106dd576106dc6105d7565b5b60006106eb848285016106b2565b91505092915050565b6000819050919050565b600061071961071461070f846105dc565b6106f4565b6105dc565b9050919050565b600061072b826106fe565b9050919050565b600061073d82610720565b9050919050565b61074d81610732565b82525050565b60006020820190506107686000830184610744565b92915050565b610777816105fc565b82525050565b6000602082019050610792600083018461076e565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006107d282610667565b91506107dd83610667565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048311821515161561081657610815610798565b5b828202905092915050565b600082825260208201905092915050565b7f4469646e27742073656e6420656e6f7567680000000000000000000000000000600082015250565b6000610868601283610821565b915061087382610832565b602082019050919050565b600060208201905081810360008301526108978161085b565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60006108d882610667565b91506108e383610667565b9250826108f3576108f261089e565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b61091d816108fe565b811461092857600080fd5b50565b60008151905061093a81610914565b92915050565b6000819050919050565b61095381610940565b811461095e57600080fd5b50565b6000815190506109708161094a565b92915050565b6000815190506109858161069b565b92915050565b600080600080600060a086880312156109a7576109a66105d7565b5b60006109b58882890161092b565b95505060206109c688828901610961565b94505060406109d788828901610976565b93505060606109e888828901610976565b92505060806109f98882890161092b565b9150509295509295909350565b600060ff82169050919050565b610a1c81610a06565b8114610a2757600080fd5b50565b600081519050610a3981610a13565b92915050565b600060208284031215610a5557610a546105d7565b5b6000610a6384828501610a2a565b91505092915050565b6000610a7782610a06565b9150610a8283610a06565b925082821015610a9557610a94610798565b5b828203905092915050565b60008160011c9050919050565b6000808291508390505b6001851115610af757808604811115610ad357610ad2610798565b5b6001851615610ae25780820291505b8081029050610af085610aa0565b9450610ab7565b94509492505050565b600082610b105760019050610bcc565b81610b1e5760009050610bcc565b8160018114610b345760028114610b3e57610b6d565b6001915050610bcc565b60ff841115610b5057610b4f610798565b5b8360020a915084821115610b6757610b66610798565b5b50610bcc565b5060208310610133831016604e8410600b8410161715610ba25782820a905083811115610b9d57610b9c610798565b5b610bcc565b610baf8484846001610aad565b92509050818404811115610bc657610bc5610798565b5b81810290505b9392505050565b6000610bde82610667565b9150610be983610a06565b9250610c167fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8484610b00565b90509291505056fea264697066735822122022b725180b09ae13f0ebedebb307d350b4d4d9ceb84fd2da014a44643c12d87264736f6c63430008080033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 114,
        "contract": "contracts/fundMe.sol:FundMe",
        "label": "minUsd",
        "offset": 0,
        "slot": "0",
        "type": "t_uint256"
      },
      {
        "astId": 116,
        "contract": "contracts/fundMe.sol:FundMe",
        "label": "owner",
        "offset": 0,
        "slot": "1",
        "type": "t_address_payable"
      },
      {
        "astId": 119,
        "contract": "contracts/fundMe.sol:FundMe",
        "label": "funders",
        "offset": 0,
        "slot": "2",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 123,
        "contract": "contracts/fundMe.sol:FundMe",
        "label": "addressToAmountFunded",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 126,
        "contract": "contracts/fundMe.sol:FundMe",
        "label": "priceFeed",
        "offset": 0,
        "slot": "4",
        "type": "t_contract(AggregatorV3Interface)45"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_address_payable": {
        "encoding": "inplace",
        "label": "address payable",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}